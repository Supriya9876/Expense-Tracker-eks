{"version":3,"sources":["Components/NavBar.js","Components/Balance.js","Components/Home.js","Components/Expenses.js","Components/AddExpense.js","Components/Chart.js","Components/Main.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","Navbar","bg","variant","Brand","href","Nav","className","Link","Component","Balance","props","state","total","error","axios","get","then","response","console","log","setState","data","catch","err","style","marginTop","textAlign","this","Home","class","Expenses","result","details","map","expenses","date","description","cost","Table","span","width","scope","AddExpense","changeDescriptionHandler","event","target","value","changeCostHandler","changeDateHandler","addExpense","expense","post","alert","history","push","autoComplete","htmlFor","id","placeholder","onChange","required","type","step","onClick","cancel","bind","Chart","dataPoints","options","autoSize","title","text","legend","enabled","series","xKey","yKey","i","temp","length","localeCompare","day","substring","String","spending","Number","Main","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2acf1d89.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\nclass NavBar extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\r\n\t\t\t\t<Navbar.Brand href=\"/home\">Expense Tracker</Navbar.Brand>\r\n\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t<Nav.Link href=\"/home\">Home</Nav.Link>\r\n\t\t\t\t\t<Nav.Link href=\"/expenses\">Expenses</Nav.Link>\r\n\t\t\t\t\t<Nav.Link href=\"/add\">Add</Nav.Link>\r\n\t\t\t\t\t<Nav.Link href=\"/statistic\">Statistic</Nav.Link>\r\n\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\n//make API calls to backend\r\nimport axios from 'axios';\r\n\r\nclass Balance extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            total: \"\",\r\n\t\t\terror: \"\"\r\n        }\r\n    }\r\n\t\r\n\tcomponentDidMount() {\r\n        axios.get('http://localhost:8080/balance')\r\n            .then((response) => {\r\n                //update the state with the response data\r\n\t\t\t\tconsole.log(response);\r\n                this.setState({\r\n                    total: response.data\r\n                });\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    error: <div className=\"alert alert-warning\" style={{ marginTop: '5%' }}>Error here</div>\r\n                })\r\n            });\r\n\r\n    }\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"container\" style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<h1>Balance</h1>\r\n\t\t\t\t\t<h2>${this.state.total}</h2>\r\n\t\t\t\t\t{this.state.error}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Balance;","import React, { Component } from 'react';\r\nimport Balance from './Balance';\r\n\r\nclass Home extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Balance/>\r\n\t\t\t\t<div style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<a href=\"/add\" class=\"btn btn-primary\"> Add an Expense </a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\n//make API calls to backend\r\nimport axios from 'axios';\r\n\r\n//CSS Framework for developing responsive websites\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nclass Expenses extends Component  {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            result: [],\r\n            error: \"\"\r\n        }\r\n    }\r\n\t\r\n\tcomponentDidMount() {\r\n        axios.get('http://localhost:8080/expenses')\r\n            .then((response) => {\r\n                //update the state with the response data\r\n\t\t\t\tconsole.log(response);\r\n                this.setState({\r\n                    result: response.data\r\n                });\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    error: <div className=\"alert alert-warning\" style={{ marginTop: '5%' }}>Error</div>\r\n                })\r\n            });\r\n\r\n    }\r\n\r\n    render(){\r\n\t\tlet error = this.state.error;\r\n\r\n        let details = this.state.result.map(expenses => {\r\n            return (\r\n                <tr>\r\n                    <td>{expenses.date}</td>\r\n                    <td>{expenses.description}</td>\r\n\t\t\t\t\t<td>${expenses.cost}</td>\r\n                </tr>\r\n            )\r\n        })\r\n        return(\r\n\t\t\t<div>\r\n                <div className=\"container\" style={{ textAlign: \"center\" }}>\r\n                    <br></br>\r\n                    <h1>Expenses</h1>\r\n                    <br></br>\r\n                    <div>\r\n                        <Table>\r\n\t\t\t\t\t\t\t<colgroup>\r\n\t\t\t\t\t\t\t\t<col span=\"1\" style={{width: '20%'}}/>\r\n\t\t\t\t\t\t\t\t<col span=\"1\" style={{width: '60%'}}/>\r\n\t\t\t\t\t\t\t\t<col span=\"1\" style={{width: '20%'}}/>\r\n\t\t\t\t\t\t\t</colgroup>\r\n\t\t\t\t\t\t\t\r\n                            <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Date</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Description</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Cost</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {/*Display the Tbale row based on data recieved*/}\r\n                                {details}\r\n                            </tbody>\r\n                        </Table>\r\n                        {error}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Expenses;","import React, { Component } from 'react';\r\n\r\n//make API calls to backend\r\nimport axios from 'axios';\r\n\r\nclass AddExpense extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t\tdate: \"\",\r\n            description: \"\",\r\n\t\t\tcost: \"\"\r\n        }\r\n    }\r\n\r\n\tchangeDescriptionHandler = event => {\r\n\t\tthis.setState({description: event.target.value});\r\n\t}\r\n\t\r\n\tchangeCostHandler = event => {\r\n\t\tthis.setState({cost: event.target.value});\r\n\t}\r\n\t\r\n\tchangeDateHandler = event => {\r\n\t\tthis.setState({date: event.target.value});\r\n\t}\r\n\r\n\taddExpense = () => {\r\n\t\tconsole.log(this.state.date)\r\n\t\tif (this.state.date && this.state.description && this.state.cost) {\r\n\t\t\tconst expense = {\r\n\t\t\tdate : this.state.date,\r\n\t\t\tdescription: this.state.description,\r\n\t\t\tcost: this.state.cost\r\n\t\t\t};\r\n\t\t\r\n\t\t\taxios.post('http://localhost:8080/add', expense)\r\n\t\t\r\n\t\t\talert(\"Expense Successfully Added\")\r\n\t\t}\r\n\t}\r\n\r\n\tcancel() {\r\n        this.props.history.push('/home');\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<h1 style={{ textAlign: \"center\" }}>Add an Expense</h1>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<div className=\"form-container\">\r\n\t\t\t\t\t\t<form autoComplete=\"off\">\r\n\t\t                    <div className=\"form-group\">\r\n\t\t                        <label htmlFor=\"description\"> Description </label>\r\n\t\t                        <input id=\"description\" placeholder=\"Enter description\" className=\"form-control\" onChange={this.changeDescriptionHandler} required/>\r\n\t\t                    </div>\r\n\t\t                    <div className=\"form-group\">\r\n\t\t                        <label htmlFor=\"cost\"> Cost </label>\r\n\t\t\t\t\t\t\t\t<div className=\"form-inline\">\r\n\t\t                        \t$&nbsp;<input type=\"number\" id=\"cost\" placeholder=\"Enter cost\" className=\"form-control\" step=\"0.01\" onChange={this.changeCostHandler} required/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t                    <div className=\"form-group\">\r\n\t\t                        <label htmlFor=\"date\"> Date </label>\r\n\t\t\t\t\t\t\t\t<input type=\"date\" id=\"date\" className=\"form-control\" onChange={this.changeDateHandler} required/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-success\" onClick={this.addExpense}> Add </button>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t                   \t\t<button className=\"btn btn-danger\" onClick={this.cancel.bind(this)}> Cancel </button>\r\n\t\t                </form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AddExpense;","import React, { Component } from 'react';\r\n\r\n//make API calls to backend\r\nimport axios from 'axios';\r\n\r\nimport { AgChartsReact } from 'ag-charts-react';\r\n\r\nexport default class Chart extends Component {\r\n\tdataPoints = [];\r\n\t\r\n\tconstructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            options: {\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tautoSize: true,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t    text: 'Expenses',\r\n\t\t\t\t},\r\n\t\t\t\tlegend: {\r\n\t\t\t\t    enabled: false\r\n\t\t\t\t},\r\n                data: this.dataPoints,\r\n                series: [{\r\n                    xKey: 'date',\r\n                    yKey: 'spending',\r\n                }],\r\n            },\r\n        };\r\n    }\r\n\t\r\n\tcomponentDidMount(){\r\n\t\taxios.get('http://localhost:8080/recent')\r\n\t\t.then((response) => {\r\n\t\t\tvar i;\r\n\t\t\tvar temp = 0;\r\n\t\t\t/* calculation for the days with multiple expenses entered */\r\n\t\t\tfor (i = 0; i < response.data.length; i++) {\r\n\t\t\t\tif (i !== (response.data.length - 1) && !response.data[i + 1].date.localeCompare(response.data[i].date)) {\r\n\t\t\t\t\ttemp += response.data[i].cost;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttemp += response.data[i].cost;\r\n\t\t\t\t\tvar day = response.data[i].date.substring(8, 10);\r\n\t\t\t\t\tthis.dataPoints.push({\r\n\t\t\t\t\t\tdate: String(day),\r\n\t\t\t\t\t\tspending: Number(temp),\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttemp = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\toptions: {\r\n\t\t\t    \t...this.state.options,\r\n\t\t\t    \tdata: this.dataPoints,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n    render() {\r\n        return <AgChartsReact options={this.state.options} />;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nimport NavBar from \"./NavBar\";\r\n\r\nimport Home from \"./Home\";\r\nimport Expenses from \"./Expenses\"\r\nimport AddExpense from './AddExpense'\r\nimport Chart from './Chart'\r\n\r\n\r\nclass Main extends Component {\r\n\t    render(){\r\n        return(\r\n            <div>\r\n\t\t\t\t<NavBar/>\r\n\t\t\t\t{/*Render Different Component based on Route*/}\r\n\t            <Switch>\r\n\t\t\t\t\t<Route exact path='/' component={Home} />\r\n\t\t\t\t\t<Route exact path='/home' component={Home} />\r\n\t\t\t\t\t<Route exact path='/expenses' component={Expenses} />\r\n\t\t\t\t\t<Route exact path='/add' component={AddExpense} />\r\n\t\t\t\t\t<Route exact path='/statistic' component={Chart} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './App.css';\r\nimport Main from './Components/Main';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t        <div>\r\n\t          {/* App Component Has a Child Component called Main*/}\r\n\t          <Main/>\r\n\t    \t</div>\r\n\t\t</BrowserRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}